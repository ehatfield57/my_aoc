
               v                                                     v
 Regs:    0 1  2     3   4            5    Cmd        A        B C     0 1  2     3   4            5
 =====    = = == =====   = ============    === ======== ======== =     = = == =====   = ============
-ip= 0 [#(0 0  0     0   0            0)] (seti     123        0 5) [#(0 0  0     0   0          123)]
-ip= 1 [#(0 0  0     0   0          123)] (bani       5      456 5) [#(0 0  1     0   0           72)]
-ip= 2 [#(0 0  1     0   0           72)] (eqri       5       72 5) [#(0 0  2     0   0            1)]
-ip= 3 [#(0 0  2     0   0            1)] (addr       5        2 2) [#(0 0  4     0   0            1)]
-ip= 5 [#(0 0  4     0   0            1)] (seti       0        9 5) [#(0 0  5     0   0            0)]
-ip= 6 [#(0 0  5     0   0            0)] (bori       5    65536 3) [#(0 0  6 65536   0            0)]
-ip= 7 [#(0 0  6 65536   0            0)] (seti 7586220        4 5) [#(0 0  7 65536   0      7586220)]
-ip= 8 [#(0 0  7 65536   0      7586220)] (bani       3      255 1) [#(0 0  8 65536   0      7586220)]
-ip= 9 [#(0 0  8 65536   0      7586220)] (addr       5        1 5) [#(0 0  9 65536   0      7586220)]
-ip=10 [#(0 0  9 65536   0      7586220)] (bani       5 16777215 5) [#(0 0 10 65536   0      7586220)]
-ip=11 [#(0 0 10 65536   0      7586220)] (muli       5    65899 5) [#(0 0 11 65536   0 499924311780)]
-ip=12 [#(0 0 11 65536   0 499924311780)] (bani       5 16777215 5) [#(0 0 12 65536   0     13606628)]
-ip=13 [#(0 0 12 65536   0     13606628)] (gtir     256        3 1) [#(0 0 13 65536   0     13606628)]
-ip=14 [#(0 0 13 65536   0     13606628)] (addr       1        2 2) [#(0 0 14 65536   0     13606628)]
-ip=15 [#(0 0 14 65536   0     13606628)] (addi       2        1 2) [#(0 0 16 65536   0     13606628)]
-ip=17 [#(0 0 16 65536   0     13606628)] (seti       0        9 1) [#(0 0 17 65536   0     13606628)]
-ip=18 [#(0 0 17 65536   0     13606628)] (addi       1        1 4) [#(0 0 18 65536   1     13606628)]
-ip=19 [#(0 0 18 65536   1     13606628)] (muli       4      256 4) [#(0 0 19 65536 256     13606628)]
-ip=20 [#(0 0 19 65536 256     13606628)] (gtrr       4        3 4) [#(0 0 20 65536   0     13606628)]
-ip=21 [#(0 0 20 65536   0     13606628)] (addr       4        2 2) [#(0 0 21 65536   0     13606628)]
-ip=22 [#(0 0 21 65536   0     13606628)] (addi       2        1 2) [#(0 0 23 65536   0     13606628)]
-ip=24 [#(0 0 23 65536   0     13606628)] (addi       1        1 1) [#(0 1 24 65536   0     13606628)]
-ip=25 [#(0 1 24 65536   0     13606628)] (seti      17        2 2) [#(0 1 17 65536   0     13606628)]
 ip=18 [#(0 1 17 65536   0     13606628)] (addi       1        1 4) [#(0 1 18 65536   2     13606628)]
 ...

idx  cmd        A        B  C
---- ---- ------- --------  -
- 0: seti     123        0  5       Store 123            -> Reg5
- 1: bani       5      456  5       AND Reg5, 456        -> Reg5
- 2: eqri       5       72  5       If Reg5 equals 72    -> Reg5 (1/0)
- 3: addr       5        2  2       Add Reg5, Reg2       -> Reg2 <- ip
* 4: seti       0        0  2       Store 0              -> Reg2 <- ip
- 5: seti       0        9  5       Store 0              -> Reg5
- 6: bori       5    65536  3       OR Reg5, 65536       -> Reg3
- 7: seti 7586220        4  5       Store 7586220        -> Reg5
- 8: bani       3      255  1       AND Reg3, 255        -> Reg1
- 9: addr       5        1  5       Add Reg5, Reg1       -> Reg5
-10: bani       5 16777215  5       AND Reg5, 16777215   -> Reg5
-11: muli       5    65899  5       Multiply Reg5, 65899 -> Reg5
-12: bani       5 16777215  5       AND Reg5, 16777215   -> Reg5
-13: gtir     256        3  1       If 256 > Reg3        -> Reg1 (1/0)
-14: addr       1        2  2       Add Reg1, Reg2       -> Reg2 <- ip
-15: addi       2        1  2       Add Reg2, 1          -> Reg2 <- ip
*16: seti      27        9  2       Store 27             -> Reg2 <- ip
-17: seti       0        9  1       Store  0             -> Reg1
-18: addi       1        1  4       Add Reg1, 1          -> Reg4       <---+
-19: muli       4      256  4       Multiply Reg4, 256   -> Reg4           |
-20: gtrr       4        3  4       If Reg4 > Reg3       -> Reg4 (1/0)     |
*21: addr       4        2  2       Add Reg4, Reg2       -> Reg2 <- ip     |
-22: addi       2        1  2       Add Reg2, 1          -> Reg2 <- ip     |
*23: seti      25        4  2       Store 25             -> Reg2 <- ip     |
-24: addi       1        1  1       Add Reg1, 1          -> Reg1           |
-25: seti      17        2  2       Store 17             -> Reg2 <- ip  ---+
 26: setr       1        6  3       Store Reg1           -> Reg3
 27: seti       7        8  2       Store 7              -> Reg2 <- ip
 28: eqrr       5        0  1       If Reg5 equals Reg0  -> Reg1 (1/0)
 29: addr       1        2  2       Add Reg1, Reg2       -> Reg2 <- ip
 30: seti       5        0  2       Store 5              -> Reg2 <- ip

